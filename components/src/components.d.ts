/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { CarbonChartOptions } from "./components/carbon-chart/carbon-chart";
import { CarbonInputOptions } from "./components/carbon-input/carbon-input";
import { CarbonSelectOptions } from "./components/carbon-select/carbon-select";
export namespace Components {
    interface CarbonChart {
        "setOptions": (options: CarbonChartOptions) => Promise<void>;
        "setValue": (value: any) => Promise<void>;
        "value": {
    data: number[],
    labels: string[]
  };
    }
    interface CarbonInput {
        "setOptions": (options: CarbonInputOptions) => Promise<void>;
        "setValue": (value: any) => Promise<void>;
        "value": string;
    }
    interface CarbonSelect {
        "setOptions": (options: CarbonSelectOptions) => Promise<void>;
        "setValue": (value: any) => Promise<void>;
        "value": string;
    }
}
export interface CarbonChartCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCarbonChartElement;
}
export interface CarbonInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCarbonInputElement;
}
export interface CarbonSelectCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCarbonSelectElement;
}
declare global {
    interface HTMLCarbonChartElement extends Components.CarbonChart, HTMLStencilElement {
    }
    var HTMLCarbonChartElement: {
        prototype: HTMLCarbonChartElement;
        new (): HTMLCarbonChartElement;
    };
    interface HTMLCarbonInputElement extends Components.CarbonInput, HTMLStencilElement {
    }
    var HTMLCarbonInputElement: {
        prototype: HTMLCarbonInputElement;
        new (): HTMLCarbonInputElement;
    };
    interface HTMLCarbonSelectElement extends Components.CarbonSelect, HTMLStencilElement {
    }
    var HTMLCarbonSelectElement: {
        prototype: HTMLCarbonSelectElement;
        new (): HTMLCarbonSelectElement;
    };
    interface HTMLElementTagNameMap {
        "carbon-chart": HTMLCarbonChartElement;
        "carbon-input": HTMLCarbonInputElement;
        "carbon-select": HTMLCarbonSelectElement;
    }
}
declare namespace LocalJSX {
    interface CarbonChart {
        "onValue"?: (event: CarbonChartCustomEvent<any>) => void;
        "value"?: {
    data: number[],
    labels: string[]
  };
    }
    interface CarbonInput {
        "onValue"?: (event: CarbonInputCustomEvent<any>) => void;
        "value"?: string;
    }
    interface CarbonSelect {
        "onValue"?: (event: CarbonSelectCustomEvent<any>) => void;
        "value"?: string;
    }
    interface IntrinsicElements {
        "carbon-chart": CarbonChart;
        "carbon-input": CarbonInput;
        "carbon-select": CarbonSelect;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "carbon-chart": LocalJSX.CarbonChart & JSXBase.HTMLAttributes<HTMLCarbonChartElement>;
            "carbon-input": LocalJSX.CarbonInput & JSXBase.HTMLAttributes<HTMLCarbonInputElement>;
            "carbon-select": LocalJSX.CarbonSelect & JSXBase.HTMLAttributes<HTMLCarbonSelectElement>;
        }
    }
}
